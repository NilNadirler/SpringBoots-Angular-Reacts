package net.javaguides.springboot.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import net.javaguides.springboot.exception.ResourceNotFoundException;
import net.javaguides.springboot.model.Employee;
import net.javaguides.springboot.repository.EmployeeRepository;

@RestController
@RequestMapping("/api/v1")
@CrossOrigin(maxAge = 3600)
public class EmployeeController {


	@Autowired
	private EmployeeRepository employeeRepository;

    @CrossOrigin("http://localhost:4200")
	@GetMapping("/employees")
	public List<Employee> getAllEmployees(){
		return employeeRepository.findAll();
	}


    @CrossOrigin("http://localhost:4200")
	@PostMapping("/employees")
	public Employee createEmployee(@RequestBody Employee employee) {
		return employeeRepository.save(employee);
	}
    
    @CrossOrigin("http://localhost:4200")
    @GetMapping("/employees/{id}")
    public ResponseEntity<Employee> getEmployeeById(@PathVariable Long id){
    	Employee employee= employeeRepository.findById(id)
    			.orElseThrow(()-> new ResourceNotFoundException("Employee not exist with id:"+id));
    	return ResponseEntity.ok(employee);
    			
    }
    @CrossOrigin("http://localhost:4200")
   	@PostMapping("/employees/{id}")
    public ResponseEntity<Employee> updateEmployee(@PathVariable Long id, Employee employeeDetails){
    	Employee employee= employeeRepository.findById(id)
    			.orElseThrow(()-> new ResourceNotFoundException("Employee not exist with id:" +id));
    	
    	employee.setFirstName(employeeDetails.getFirstName());
    	employee.setLastName(employeeDetails.getLastName());
    	employee.setEmailId(employeeDetails.getEmailId());
    	
    	Employee updatedEmployee=employeeRepository.save(employee);
    	return ResponseEntity.ok(updatedEmployee);
    	
    }
    @CrossOrigin("http://localhost:4200")
   	@PostMapping("/employees/updatename/{id}")
    public ResponseEntity<Employee> updateEmployeeName(@PathVariable Long id, @RequestParam String name){
    	Employee employee= employeeRepository.findById(id)
    			.orElseThrow(()-> new ResourceNotFoundException("Employee not exist with id:" +id));
    	
    	employee.setFirstName(name);
    	
    	Employee updatedEmployee=employeeRepository.save(employee);
    	return ResponseEntity.ok(updatedEmployee);
    	
    }
    @CrossOrigin("http://localhost:4200")
   	@GetMapping("/employees/updatenamewithpath/{id}/{name}")
    public ResponseEntity<Employee> updateEmployeeNameWithPath(@PathVariable Long id, @PathVariable String name){
    	Employee employee= employeeRepository.findById(id)
    			.orElseThrow(()-> new ResourceNotFoundException("Employee not exist with id:" +id));
    	employee.setFirstName(name);
    	Employee updatedEmployee=employeeRepository.save(employee);
    	return ResponseEntity.ok(updatedEmployee);
    	
    }
    
}
